---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: db-volume
spec:
  storageClassName: manual
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/tmp/data"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: pvc-db-volume
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: milanuncios
  labels:
    app: milanuncios
spec:
  selector:
    matchLabels:
      app: milanuncios
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      name: milanuncios
      labels:
        app: milanuncios
    spec:
      containers:
      - name: java
        image: codeurjc/java-webapp-bbdd:v2
        env:
          - name: MYSQL_ROOT_PASSWORD
            value: pass
          - name: MYSQL_DATABASE
            value: test
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: milanuncios-db
  labels:
    app: milanuncios
    type: db
spec:
  selector:
    matchLabels:
      type: db
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      name: milanuncios-db
      labels:
        app: milanuncios
        type: db
    spec:
      containers:
      - name: database
        image: mysql:5.6
        env:
          - name: MYSQL_ROOT_PASSWORD
            value: pass
          - name: MYSQL_DATABASE
            value: test
        ports:
        - containerPort: 3306
        volumeMounts:
        - mountPath: "/var/lib/mysql"
          name: db-volume
      volumes:
      - name: db-volume
        persistentVolumeClaim:
          claimName: pvc-db-volume
---
apiVersion: v1
kind: Service
metadata:
  name: db
  labels:
    app: milanuncios
spec:
  ports:
    - port: 3306
      targetPort: 3306
      protocol: TCP
      name: db
  selector:
    type: db
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: milanuncios
  labels:
    app: milanuncios
spec:
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
      name: milanuncios
  selector:
    app: milanuncios
  type: NodePort
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress  
metadata:  
  name: webs-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:  
  rules:
  - host: www.sampledomain.com
    http:
      paths:
      - path: /anuncios(/|$)(.*)
        backend:
          serviceName: milanuncios
          servicePort: 8080